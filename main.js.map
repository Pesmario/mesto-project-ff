{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/cards.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["\n\nexport const initialCards = [\n    {\n      name: \"Архыз\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n    },\n    {\n      name: \"Челябинская область\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n    },\n    {\n      name: \"Иваново\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n    },\n    {\n      name: \"Камчатка\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n    },\n    {\n      name: \"Холмогорский район\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n    },\n    {\n      name: \"Байкал\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n    }\n];","\nconst openModal = (element) => {\n  element.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeModalOnEscape);\n};\n\nconst closeModal = (element) => {\n  element.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closeModalOnEscape);\n};\n\nconst closeModalOnEscape = (evt) => {\n  if (evt.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    closeModal(openedPopup);\n  }\n};\n\nexport { openModal, closeModal, closeModalOnEscape }; \n\n","const cardTemplate = document.querySelector('#card-template').content;\n\n//функция создания карточки\nconst createCard = (cardInfo, deleteCard, openImagePopup, isLiked) => {\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const cardImage = cardElement.querySelector('.card__image');\n  cardImage.src = cardInfo.link;\n  cardImage.alt = cardInfo.name;\n  cardElement.querySelector('.card__title').textContent = cardInfo.name;\n  const likeButton = cardElement.querySelector('.card__like-button');\n\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  deleteButton.addEventListener('click', function() {\n    deleteCard(cardElement);\n  });\n\n  cardImage.addEventListener('click', (evt) => {\n    openImagePopup(evt);\n  });\n\n  likeButton.addEventListener('click', (evt) => {\n    isLiked(evt);\n  });\n\n  return cardElement;\n}\n\n//функция удаления карточки\nconst deleteCard = function(cardElement) {\n  cardElement.remove();\n}\n\n//функция проставки лайка\nfunction isLiked(evt) {\n  evt.target.classList.toggle('card__like-button_is-active');\n};\n\nexport { createCard, deleteCard, isLiked }; ","\nimport './pages/index.css';\nimport { initialCards } from './components/cards.js';\nimport { openModal, closeModal, closeModalOnEscape } from './components/modal.js'; \nimport { createCard, deleteCard, isLiked } from './components/card.js'; \n\n// находим все попапы\nconst popupAll = document.querySelectorAll(\".popup\");\n\n//находим кнопку редактирования профиля, поля профиля, форму\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\n\n// находим форму редактирования профиля, попап ред-ия профиля, поля попапа редактирования профиля\nconst popupProfileEdit = document.querySelector(\".popup_type_edit\");\nconst popupProfileForm = document.forms[\"edit-profile\"];\nconst nameInput = document.querySelector('.popup__input_type_description');\nconst jobInput = document.querySelector('.popup__input_type_name');\n\n// находим кнопку добавления карточки\nconst newCardButton = document.querySelector('.profile__add-button');\n\n// находим попап добавления карточки, форму добавления карточки, поля формы\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nconst popupNewCardForm = document.forms[\"new-place\"];\nconst cardNameInput = popupNewCard.querySelector('.popup__input_type_card-name');\nconst cardImgUrlInput = popupNewCard.querySelector('.popup__input_type_url');\n\n//переменные попапа картинки\nconst popupPicture = document.querySelector('.popup_type_image');\nconst popupPictureImage = document.querySelector('.popup__image');\nconst popupPictureText = document.querySelector('.popup__caption');\n\n// переменные лайка\nconst likeButton = document.querySelector('.card__like-button');\n\n// получаем темплейт карточки\n\nconst placesList = document.querySelector('.places__list');\n\n// добавляем карточки на страницу из массива в cards.js\ninitialCards.forEach(function(cardElement) {\n  const newCard = createCard(cardElement, deleteCard, openImagePopup, isLiked);\n  placesList.append(newCard);\n});\n\n// functions\n\n// функция заполнения попапа редактирования профиля\nconst fillProfilePopup = (form, name, description) => {\n  form.elements.name.value = name;\n  form.elements.description.value = description;\n};\n\n//функция инициализации попапа с картинкой\nfunction openImagePopup(evt) {\n  popupPictureImage.src = evt.currentTarget.src;\n  popupPictureImage.alt = evt.currentTarget.alt;\n  popupPictureText.textContent = popupPictureImage.alt;\n  openModal(popupPicture);\n};\n\n// функция заполения профиля новыми данными после submit\n\nfunction handleFormSubmit(evt) {\n  evt.preventDefault();\n  const nameValue = nameInput.value;\n  const jobValue = jobInput.value;\n  profileTitle.textContent = jobValue;\n  profileDescription.textContent = nameValue;\n  closeModal(popupProfileEdit);\n}\n\n// функция добавления карточки\n\nfunction submitAddCard(evt) {\n  evt.preventDefault();\n  const cardDataObj = {};\n  cardDataObj.name = cardNameInput.value;\n  cardDataObj.link = cardImgUrlInput.value;\n  const cardElement = createCard(\n    cardDataObj,\n    deleteCard, \n    openImagePopup, \n    isLiked\n  );\n  placesList.prepend(cardElement);\n  popupNewCardForm.reset();\n  closeModal(popupNewCard);\n}\n\n// листенеры\n//profile popup\nprofileEditButton.addEventListener(\"click\", () => {\n  fillProfilePopup(\n    popupProfileForm,\n    profileTitle.textContent,\n    profileDescription.textContent,\n  );\n  openModal(popupProfileEdit);\n});\n\n// add card popup\nnewCardButton.addEventListener(\"click\", () => {\n  popupNewCardForm.reset();\n  openModal(popupNewCard);\n});\n\n// обработчик submit на редактирование профиля\npopupProfileForm.addEventListener('submit', handleFormSubmit); \n\n// обрабочик submit добавления карточки\npopupNewCardForm.addEventListener('submit', submitAddCard);\n\n// добавляем анимацию всем попапам\npopupAll.forEach((element) => element.classList.add('popup_is-animated'));\n\n// цикл закрытия всех попапов крестику или оверлею\npopupAll.forEach(function(element) {\n  element.addEventListener(\"click\", (evt) => {\n    if (evt.target === evt.currentTarget || evt.target.classList.contains(\"popup__close\")) {\n      closeModal(evt.currentTarget);\n    }\n  })\n});\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["openModal","element","classList","add","document","addEventListener","closeModalOnEscape","closeModal","remove","removeEventListener","evt","key","openedPopup","querySelector","cardTemplate","content","createCard","cardInfo","deleteCard","openImagePopup","isLiked","cardElement","cloneNode","cardImage","src","link","alt","name","textContent","likeButton","target","toggle","popupAll","querySelectorAll","profileTitle","profileDescription","profileEditButton","popupProfileEdit","popupProfileForm","forms","nameInput","jobInput","newCardButton","popupNewCard","popupNewCardForm","cardNameInput","cardImgUrlInput","popupPicture","popupPictureImage","popupPictureText","placesList","currentTarget","forEach","newCard","append","form","description","elements","value","reset","preventDefault","nameValue","jobValue","cardDataObj","prepend","contains"],"sourceRoot":""}